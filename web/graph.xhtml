<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:a="http://xmlns.jcp.org/jsf/passthrough"
      xmlns:p="http://primefaces.org/ui">

    <h:head>
        <title>BPMN Path Extractor - Main Page</title>
        <style type="text/css">
            .main-layout-unit {
                font-size: 8pt;
                text-align: center;
            }
            .sub-layout-unit {
                border: 0;
            }
            .activity {
                border: 1.5pt solid black;
                width: 80pt;
                height: 50pt;
                line-height: 50pt;
                text-align: center;
                border-radius: 10pt;
            }
            .gateway {
                border: 1.5pt solid black;
                width: 50pt;
                height: 50pt;
                line-height: 50pt;
                text-align: center;
                background: url("../resources/gateway-cross.png") no-repeat center;
                background-size: cover;
                transform: rotate(45deg) scale(0.7);
            }
            .start-event {
                border: 1.5pt solid black;
                width: 50pt;
                height: 50pt;
                line-height: 50pt;
                text-align: center;
                border-radius: 50%;
            }
            .intermediate-event {
                border: 2.9pt double black;
                width: 48pt;
                height: 48pt;
                line-height: 50pt;
                text-align: center;
                border-radius: 50%;
            }
            .end-event {
                border: 2.9pt solid black;
                width: 48pt;
                height: 48pt;
                line-height: 50pt;
                text-align: center;
                border-radius: 50%;
            }
            .diagram {
                height: inherit;
                width: inherit;
            }
            .ui-fileupload-content .ui-progressbar {
                width: 0;
                height: 0;
                margin: 0;
            }
        </style>
    </h:head>

    <h:body>
        <p:layout fullPage="true">
            <p:layoutUnit position="center" header="BPMN Graph" styleClass="main-layout-unit">
                <p:diagram id="diagram" value="#{diagramView.model}" styleClass="diagram"/>
            </p:layoutUnit>
            <p:layoutUnit position="west" size="300" styleClass="main-layout-unit">
                <p:layout>
                    <p:layoutUnit position="center" header="Actions" styleClass="sub-layout-unit">
                        <h:form>
                            <p:fileUpload fileUploadListener="#{diagramView.drawDiagram}" allowTypes="/(\.|\/)(bpmn)$/" update="diagram"/>
                        </h:form>
                        <p:button value="Set Activities Properties" outcome="properties"/>
                        <p:commandButton value="Extract Paths"/>
                    </p:layoutUnit>
                    <p:layoutUnit position="south" size="650" header="Paths List" styleClass="sub-layout-unit"/>
                </p:layout>
            </p:layoutUnit>
        </p:layout>
    </h:body>

    <script type="text/javascript">
        function createClass(selector, style) {
            if (!document.styleSheets) return;
            if (document.getElementsByTagName('head').length === 0) return;

            var styleSheet,mediaType;

            if (document.styleSheets.length > 0) {
                for (var i = 0, length = document.styleSheets.length; i &lt; length; i++) {
                    if (document.styleSheets[i].disabled)
                        continue;
                    var media = document.styleSheets[i].media;
                    mediaType = typeof media;

                    if (mediaType === 'string') {
                        if (media === '' || (media.indexOf('screen') !== -1)) {
                            styleSheet = document.styleSheets[i];
                        }
                    }
                    else if (mediaType ==='object') {
                        if (media.mediaText === '' || (media.mediaText.indexOf('screen') !== -1)) {
                            styleSheet = document.styleSheets[i];
                        }
                    }

                    if (typeof styleSheet !== 'undefined')
                        break;
                }
            }

            if (typeof styleSheet === 'undefined') {
                var styleSheetElement = document.createElement('style');
                styleSheetElement.type = 'text/css';
                document.getElementsByTagName('head')[0].appendChild(styleSheetElement);

                for (i = 0; i &lt; document.styleSheets.length; i++) {
                    if (document.styleSheets[i].disabled) {
                        continue;
                    }
                    styleSheet = document.styleSheets[i];
                }

                mediaType = typeof styleSheet.media;
            }

            if (mediaType === 'string') {
                for (var i = 0, l = styleSheet.rules.length; i &lt; l; i++) {
                    if(styleSheet.rules[i].selectorText &amp;&amp; styleSheet.rules[i].selectorText.toLowerCase() === selector.toLowerCase()) {
                        styleSheet.rules[i].style.cssText = style;
                        return;
                    }
                }
                styleSheet.addRule(selector,style);
            }
            else if (mediaType === 'object') {
                var styleSheetLength = (styleSheet.cssRules) ? styleSheet.cssRules.length : 0;
                for (var i = 0; i &lt; styleSheetLength; i++) {
                    if (styleSheet.cssRules[i].selectorText &amp;&amp; styleSheet.cssRules[i].selectorText.toLowerCase() === selector.toLowerCase()) {
                        styleSheet.cssRules[i].style.cssText = style;
                        return;
                    }
                }
                styleSheet.insertRule(selector + '{' + style + '}', styleSheetLength);
            }
        }
    </script>

</html>
